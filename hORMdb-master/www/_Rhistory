}
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
print(paste(receptor, receptors[count,1]))
count <- count + 1
}
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
print(identical(as.character(receptor), as.character(receptors[count,1])))
count <- count + 1
}
as.ch
head(receptors)
receptors[1,3]
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), as.character(receptors[count,3])))
}
count <- count + 1
}
new_OR_name
count <- 1
for (receptor in receptors$individual){
print(paste(receptors$individual, new_OR_name[count]))
count <- count + 1
}
count <- 1
for (receptor in receptors$individual){
print(paste(receptors$individual, new_OR_name[count]))
count <- count + 1
}
count <- 1
for (receptor in receptors$individual){
print(paste(receptor, new_OR_name[count]))
count <- count + 1
}
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR reference name
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), as.character(receptors[count,3])))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=70,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
receptors
data
head(data)
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), paste(' (', paste(as.character(receptors[count,3]), ')'))))
}
count <- count + 1
}
new_OR_name
'a' + 'b'
paste('a', 'b')
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1], sep =''),
paste(' (', paste(as.character(receptors[count,3]), ')', sep = ''))))
}
count <- count + 1
}
new_OR_name
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR reference name
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1], sep =''),
paste(' (', paste(as.character(receptors[count,3]), ')', sep = ''))))
}
count <- count + 1
}
new_OR_name
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
new_OR_name
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=70,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
#Prepare data
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=70,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
p
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=50,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=55,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
cwd
wd
currentwd
cd
ls
setwd
setwd()
# Make the plot
setwd("/home/ramon/Escritorio/TFM/ORVDB/www")
getwd()
receptors <- table(file$Gene)
receptors <- as.data.frame(receptors)
colnames(receptors) <- c('individual', 'value')
family <- c()
for (pos in receptors$individual){
family <- c(family, unique(file$Family[file$Gene==pos]))
}
receptors$family <- family
colnames(receptors) <- c('individual', 'value', 'group')
receptors <- receptors[c('individual', 'group', 'value')]
receptors$group <- as.factor(receptors$group)
# Add ORs count to OR referencename
new_OR_name <- c()
count <- 1
for (receptor in receptors$individual){
if (identical(as.character(receptor), as.character(receptors[count,1])) == T){
add <- paste('(', as.character(receptors[count,3]), sep='')
add <- paste(add, ')', sep ='')
new_OR_name <- c(new_OR_name, paste(as.character(receptors[count,1]), add, sep=' '))
}
count <- count + 1
}
receptors$individual <- new_OR_name
# Create dataset
library(tidyverse)
data <- receptors
# Order data:
data = data %>% arrange(group, value)
# Set a number of 'empty bar' to add at the end of each group
empty_bar=1
to_add = data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) = colnames(data)
to_add$group=rep(levels(data$group), each=empty_bar)
data=rbind(data, to_add)
data=data %>% arrange(group)
data$id=seq(1, nrow(data))
data #tutto benne
# Get the name and the y position of each label
label_data=data
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar  # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust<-ifelse( angle < -90, 1, 0)
label_data$angle<-ifelse(angle < -90, angle+180, angle)
label_data
# Make the plot
setwd("/home/ramon/Escritorio/Master Omics/TFM/ORVDB/www")
pdf("receptors_families.pdf", width=55,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
jpg("receptors_families.jpg", width=55,height=50)
jpeg("receptors_families.jpg", width=55,height=50)
p = ggplot(data, aes(x=as.factor(id), y=value, fill=group)) + # Note that id is a factor. If x is numeric, there is some space between the first bar
geom_bar(stat="identity", alpha=0.5) +
ylim(0,632) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-25,20), "cm")
) +
coord_polar() +
geom_text(data=label_data, aes(x=id, y=value+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=4, angle= label_data$angle, inherit.aes = FALSE )
p
dev.off()
runApp('~/Escritorio/Master Omics/TFM/ORVDB')
runApp('~/Escritorio/Master Omics/TFM/ORVDB')
runApp('~/Escritorio/Master Omics/TFM/ORVDB')
runApp('~/Escritorio/Master Omics/TFM/ORVDB')
